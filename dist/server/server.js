const express=require("express"),bodyParser=require("body-parser"),cors=require("cors"),path=require("path"),jwt=require("jsonwebtoken"),db=require("./database"),app=express();app.use(express.static("dist")),app.use(bodyParser.urlencoded({extended:!0})),app.use(bodyParser.json());const corsOptions={exposedHeaders:"token"};app.use(cors(corsOptions));const secret=process.env.SECRET,port=process.env.PORT||5e3;app.listen(port,(()=>{}));const authenticateToken=function(e,s,t){if(console.log("url: ",e.originalUrl),"POST"===e.method&&"/login"===e.originalUrl||"GET"===e.method&&"/favicon.ico"===e.originalUrl)console.log("call next..."),t();else{console.log("verify token..");const o=e.headers.authorization,r=o&&o.split(" ")[1];null==r&&s.sendStatus(401),jwt.verify(r,secret,((e,o)=>{e&&s.sendStatus(403),o&&t()}))}};app.use(authenticateToken),app.get("/notebook",((e,s)=>{s.sendFile(path.join(__dirname,"./../index.html"))})),app.get("/check",((e,s)=>{s.send("The server is up..")})),app.post("/login",(async(e,s)=>{const t=await db.retrieveUser(e.body);if(t){const e=jwt.sign({user:t.username},secret,{expiresIn:60});s.header("token",e),s.send(t)}else s.sendStatus(403)})),app.post("/add",((e,s)=>{const{body:t}=e;db.updateNotes(t),s.sendStatus(200)})),app.get("/getNotesForUser",(async(e,s)=>{const{username:t}=e.query,o=await db.retrieveNotesForUsername(t);s.send(o)})),app.put("/deleteNotesForUser",(async(e,s)=>{const{username:t}=e.body,o=await db.deleteNotesForUsername(t);s.json(o)}));