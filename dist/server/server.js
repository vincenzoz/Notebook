const express=require("express"),bodyParser=require("body-parser"),cors=require("cors"),jwt=require("jsonwebtoken"),db=require("./database"),app=express();app.use(express.static("dist")),app.use(bodyParser.urlencoded({extended:!0})),app.use(bodyParser.json());const corsOptions={exposedHeaders:"token"};app.use(cors(corsOptions));const secret=process.env.SECRET,port=process.env.PORT||5e3;app.listen(port,(()=>{}));const authenticateToken=function(e,s,o){if(console.log("url: ",e.originalUrl),"POST"===e.method&&"/login"===e.originalUrl||"GET"===e.method&&"/favicon.ico"===e.originalUrl)console.log("call next..."),o();else{console.log("verify token..");const t=e.headers.authorization,r=t&&t.split(" ")[1];null==r&&s.sendStatus(401),jwt.verify(r,secret,((e,t)=>{e&&s.sendStatus(403),t&&o()}))}};app.use(authenticateToken),app.post("/login",(async(e,s)=>{const o=await db.retrieveUser(e.body);if(o){const e=jwt.sign({user:o.username},secret,{expiresIn:1800});s.header("token",e),s.send(o)}else s.sendStatus(403)})),app.post("/add",((e,s)=>{const{body:o}=e;db.updateNotes(o),s.sendStatus(200)})),app.get("/getNotesForUser",(async(e,s)=>{const{username:o}=e.query,t=await db.retrieveNotesForUsername(o);s.send(t)})),app.put("/deleteNotesForUser",(async(e,s)=>{const{username:o}=e.body,t=await db.deleteNotesForUsername(o);s.json(t)}));